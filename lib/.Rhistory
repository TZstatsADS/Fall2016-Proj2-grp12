library(rgdal)
library(maptools)
library(KernSmooth)
# Function to set wd
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#setwd("/Users/zuonianyao/Documents/GR5243/Project2")
wifi <- fread("../data/NYC_Wi-Fi_Hotspot_Locations_Map.csv")
create.wifi.geodata <- function(wifi.data){
wifi_1 <- wifi.data %>%
dplyr::select(Type,Location,Lat,Long_,Location_T,City) %>%
filter(Type=="Free"|Type=="Limited Free")
wifi.geodata <- na.omit(wifi_1)
return(wifi.geodata)
}
create.wifi.contour.lines <- function(wifi.geodata){
X=cbind(wifi.geodata$Long_,wifi.geodata$Lat)
kde2d <- bkde2D(X, bandwidth=c(bw.ucv(X[,1]),bw.ucv(X[,2])))
x <- kde2d$x1
y <- kde2d$x2
z <- kde2d$fhat
CL=contourLines(x , y , z)
return(CL)
}
add.wifi.points <- function(leaflet.plot, wifi.geodata){
leaflet.plot <- leaflet.plot %>%
addCircles(wifi.geodata$Long_,wifi.geodata$Lat, radius = 0.1,opacity=0.4,col="orange")
return(leaflet.plot)
}
add.wifi.contours <- function(leaflet.plot, CL){
leaflet.plot <- leaflet.plot %>%
addPolygons(CL[[1]]$x,CL[[1]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[2]]$x,CL[[2]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[3]]$x,CL[[3]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[4]]$x,CL[[4]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[5]]$x,CL[[5]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[6]]$x,CL[[6]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[7]]$x,CL[[7]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[8]]$x,CL[[8]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[9]]$x,CL[[9]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[10]]$x,CL[[10]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[11]]$x,CL[[11]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[12]]$x,CL[[12]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[13]]$x,CL[[13]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[14]]$x,CL[[14]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[15]]$x,CL[[15]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[16]]$x,CL[[16]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[17]]$x,CL[[17]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[18]]$x,CL[[18]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[19]]$x,CL[[19]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[20]]$x,CL[[20]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[21]]$x,CL[[21]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[22]]$x,CL[[22]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[23]]$x,CL[[23]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[24]]$x,CL[[24]]$y,fillColor = "red", stroke = FALSE)
return(leaflet.plot)
}
## Run to test functions
wifi.geodata <- create.wifi.geodata(wifi)
CL <- create.wifi.contour.lines(wifi.geodata)
m = leaflet() %>% setView(lng = -73.97, lat = 40.75, zoom = 12) %>%
addProviderTiles("CartoDB.Positron")
m <- add.wifi.points(m)
m <- add.wifi.contours(m, CL)
m
library(dplyr)
library(ggmap)
library(ggplot2)
library(DT)
library(readr)
library(data.table)
library(qmap)
library(maps)
library(leaflet)
library(raster)
library(sp)
library(rgdal)
library(maptools)
library(KernSmooth)
# Function to set wd
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#setwd("/Users/zuonianyao/Documents/GR5243/Project2")
wifi <- fread("../data/NYC_Wi-Fi_Hotspot_Locations_Map.csv")
create.wifi.geodata <- function(wifi.data){
wifi_1 <- wifi.data %>%
dplyr::select(Type,Location,Lat,Long_,Location_T,City) %>%
filter(Type=="Free"|Type=="Limited Free")
wifi.geodata <- na.omit(wifi_1)
return(wifi.geodata)
}
create.wifi.contour.lines <- function(wifi.geodata){
X=cbind(wifi.geodata$Long_,wifi.geodata$Lat)
kde2d <- bkde2D(X, bandwidth=c(bw.ucv(X[,1]),bw.ucv(X[,2])))
x <- kde2d$x1
y <- kde2d$x2
z <- kde2d$fhat
CL=contourLines(x , y , z)
return(CL)
}
add.wifi.points <- function(leaflet.plot, wifi.geodata){
leaflet.plot <- leaflet.plot %>%
addCircles(wifi.geodata$Long_,wifi.geodata$Lat, radius = 0.1,opacity=0.4,col="orange")
return(leaflet.plot)
}
add.wifi.contours <- function(leaflet.plot, CL){
leaflet.plot <- leaflet.plot %>%
addPolygons(CL[[1]]$x,CL[[1]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[2]]$x,CL[[2]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[3]]$x,CL[[3]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[4]]$x,CL[[4]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[5]]$x,CL[[5]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[6]]$x,CL[[6]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[7]]$x,CL[[7]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[8]]$x,CL[[8]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[9]]$x,CL[[9]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[10]]$x,CL[[10]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[11]]$x,CL[[11]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[12]]$x,CL[[12]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[13]]$x,CL[[13]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[14]]$x,CL[[14]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[15]]$x,CL[[15]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[16]]$x,CL[[16]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[17]]$x,CL[[17]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[18]]$x,CL[[18]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[19]]$x,CL[[19]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[20]]$x,CL[[20]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[21]]$x,CL[[21]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[22]]$x,CL[[22]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[23]]$x,CL[[23]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[24]]$x,CL[[24]]$y,fillColor = "red", stroke = FALSE)
return(leaflet.plot)
}
## Run to test functions
wifi.geodata <- create.wifi.geodata(wifi)
CL <- create.wifi.contour.lines(wifi.geodata)
m = leaflet() %>% setView(lng = -73.97, lat = 40.75, zoom = 12) %>%
addProviderTiles("CartoDB.Positron")
m <- add.wifi.points(m)
m <- add.wifi.contours(m, CL)
m
library(dplyr)
library(ggmap)
library(ggplot2)
library(DT)
library(readr)
library(data.table)
library(qmap)
library(maps)
library(leaflet)
library(raster)
library(sp)
library(rgdal)
library(maptools)
library(KernSmooth)
# Function to set wd
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#setwd("/Users/zuonianyao/Documents/GR5243/Project2")
wifi <- fread("../data/NYC_Wi-Fi_Hotspot_Locations_Map.csv")
create.wifi.geodata <- function(wifi.data){
wifi_1 <- wifi.data %>%
dplyr::select(Type,Location,Lat,Long_,Location_T,City) %>%
filter(Type=="Free"|Type=="Limited Free")
wifi.geodata <- na.omit(wifi_1)
return(wifi.geodata)
}
create.wifi.contour.lines <- function(wifi.geodata){
X=cbind(wifi.geodata$Long_,wifi.geodata$Lat)
kde2d <- bkde2D(X, bandwidth=c(bw.ucv(X[,1]),bw.ucv(X[,2])))
x <- kde2d$x1
y <- kde2d$x2
z <- kde2d$fhat
CL=contourLines(x , y , z)
return(CL)
}
add.wifi.points <- function(leaflet.plot, wifi.geodata){
leaflet.plot <- leaflet.plot %>%
addCircles(wifi.geodata$Long_,wifi.geodata$Lat, radius = 0.1,opacity=0.4,col="orange")
return(leaflet.plot)
}
add.wifi.contours <- function(leaflet.plot, CL){
leaflet.plot <- leaflet.plot %>%
addPolygons(CL[[1]]$x,CL[[1]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[2]]$x,CL[[2]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[3]]$x,CL[[3]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[4]]$x,CL[[4]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[5]]$x,CL[[5]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[6]]$x,CL[[6]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[7]]$x,CL[[7]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[8]]$x,CL[[8]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[9]]$x,CL[[9]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[10]]$x,CL[[10]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[11]]$x,CL[[11]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[12]]$x,CL[[12]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[13]]$x,CL[[13]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[14]]$x,CL[[14]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[15]]$x,CL[[15]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[16]]$x,CL[[16]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[17]]$x,CL[[17]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[18]]$x,CL[[18]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[19]]$x,CL[[19]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[20]]$x,CL[[20]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[21]]$x,CL[[21]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[22]]$x,CL[[22]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[23]]$x,CL[[23]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[24]]$x,CL[[24]]$y,fillColor = "red", stroke = FALSE)
return(leaflet.plot)
}
## Run to test functions
wifi.geodata <- create.wifi.geodata(wifi)
CL <- create.wifi.contour.lines(wifi.geodata)
m = leaflet() %>% setView(lng = -73.97, lat = 40.75, zoom = 12) %>%
addProviderTiles("CartoDB.Positron")
m <- add.wifi.points(m, wifi.geodata)
m <- add.wifi.contours(m, CL)
m
shiny::runApp('C:/Users/jgaci/Dropbox/2016_Fall/Applied_Data_Science/Project02/Fall2016-Proj2-grp12/app')
View(wifi)
View(wifi.geodata)
runApp('C:/Users/jgaci/Dropbox/2016_Fall/Applied_Data_Science/Project02/Fall2016-Proj2-grp12/app')
runApp('C:/Users/jgaci/Dropbox/2016_Fall/Applied_Data_Science/Project02/Fall2016-Proj2-grp12/app')
library(dplyr)
library(ggmap)
library(ggplot2)
library(DT)
library(readr)
library(data.table)
library(qmap)
library(maps)
library(leaflet)
library(raster)
library(sp)
library(rgdal)
library(maptools)
library(KernSmooth)
# Function to set wd
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#setwd("/Users/zuonianyao/Documents/GR5243/Project2")
wifi <- fread("../data/NYC_Wi-Fi_Hotspot_Locations_Map.csv")
create.wifi.geodata <- function(wifi.data){
wifi_1 <- wifi.data %>%
dplyr::select(Type,Location,Lat,Long_,Location_T,City) %>%
filter(Type=="Free"|Type=="Limited Free")
wifi.geodata <- na.omit(wifi_1)
return(wifi.geodata)
}
create.wifi.contour.lines <- function(wifi.geodata){
X=cbind(wifi.geodata$Long_,wifi.geodata$Lat)
kde2d <- bkde2D(X, bandwidth=c(bw.ucv(X[,1]),bw.ucv(X[,2])))
x <- kde2d$x1
y <- kde2d$x2
z <- kde2d$fhat
CL=contourLines(x , y , z)
return(CL)
}
add.wifi.points <- function(leaflet.plot, wifi.geodata){
leaflet.plot <- leaflet.plot %>%
addCircles(wifi.geodata$Long_,wifi.geodata$Lat, radius = 0.1,opacity=0.4,col="orange")
return(leaflet.plot)
}
add.wifi.contours <- function(leaflet.plot, CL){
leaflet.plot <- leaflet.plot %>%
addPolygons(CL[[1]]$x,CL[[1]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[2]]$x,CL[[2]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[3]]$x,CL[[3]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[4]]$x,CL[[4]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[5]]$x,CL[[5]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[6]]$x,CL[[6]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[7]]$x,CL[[7]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[8]]$x,CL[[8]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[9]]$x,CL[[9]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[10]]$x,CL[[10]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[11]]$x,CL[[11]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[12]]$x,CL[[12]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[13]]$x,CL[[13]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[14]]$x,CL[[14]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[15]]$x,CL[[15]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[16]]$x,CL[[16]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[17]]$x,CL[[17]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[18]]$x,CL[[18]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[19]]$x,CL[[19]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[20]]$x,CL[[20]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[21]]$x,CL[[21]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[22]]$x,CL[[22]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[23]]$x,CL[[23]]$y,fillColor = "red", stroke = FALSE) %>%
addPolygons(CL[[24]]$x,CL[[24]]$y,fillColor = "red", stroke = FALSE)
return(leaflet.plot)
}
## Run to test functions
wifi.geodata <- create.wifi.geodata(wifi)
CL <- create.wifi.contour.lines(wifi.geodata)
m = leaflet() %>% setView(lng = -73.97, lat = 40.75, zoom = 12) %>%
addProviderTiles("CartoDB.Positron")
m <- add.wifi.points(m, wifi.geodata)
m <- add.wifi.contours(m, CL)
m
runApp('C:/Users/jgaci/Dropbox/2016_Fall/Applied_Data_Science/Project02/Fall2016-Proj2-grp12/app')
# Function to set wd
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('wifi_contour_leaflet_functions.R')
#setwd("/Users/zuonianyao/Documents/GR5243/Project2")
wifi <- read.csv("../data/NYC_Wi-Fi_Hotspot_Locations_Map.csv")
wifi.geodata <- create.wifi.geodata(wifi)
CL <- create.wifi.contour.lines(wifi.geodata)
m = leaflet() %>% setView(lng = -73.97, lat = 40.75, zoom = 12) %>%
addProviderTiles("CartoDB.Positron")
m <- add.wifi.points(m, wifi.geodata)
m <- add.wifi.contours(m, CL)
m
runApp('C:/Users/jgaci/Dropbox/2016_Fall/Applied_Data_Science/Project02/Fall2016-Proj2-grp12/app')
runApp('C:/Users/jgaci/Dropbox/2016_Fall/Applied_Data_Science/Project02/Fall2016-Proj2-grp12/app')
runApp('C:/Users/jgaci/Dropbox/2016_Fall/Applied_Data_Science/Project02/Fall2016-Proj2-grp12/app')
getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(dplyr)
library(ggmap)
library(ggplot2)
library(DT)
library(readr)
library(data.table)
library(qmap)
source('restaurant_data_functions.R') # functions
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Get Data ----
preliminary.data.job <- FALSE
get.geocode.data.flag <- FALSE
relevant.columns <- c('CAMIS','DBA','CUISINE.DESCRIPTION','full.address')
source.data.file <- "../data/DOHMH_New_York_City_Restaurant_Inspection_Results.csv"
output.route <- '../output/output_geodata/'
restaurant.data.uniques <- etl.input.data(FALSE, relevant.columns, source.data.file, output.route)
# Obtain geocode data ----
# We have to run this several times, because google only allows 2500 calls per day.
if(get.geocode.data.flag){
# KEY PARAMETERS
source.of.data <- "google"
google.daily.max <- 2500
fileNumber <- 6
# Calculations of range to explore, from a to b
a <- (fileNumber-1)*google.daily.max + 1
b <- a + google.daily.max - 1
# You can change a and b manually in the next two rows
#a <- 10001
#b <- 10100
range.to.get.data <- a:b
# Function Call
geocode.data <- get.geocode.data(restaurant.data.uniques,
range.to.get.data,
fileNumber,
source.of.data,
output.route)
}
# Merge all files
restaurants.geocoded <- multimerge(output.route)
cafe_marker <- function(dataset){
dataset <- dataset %>%
mutate(cafe=ifelse(grepl("CAFE",DBA),1,
ifelse(grepl("Cafe",DBA),1,
ifelse(grepl("cafe",DBA),1,0))))
return(dataset)
}
restaurants.geocoded <- cafe_marker(restaurants.geocoded)
write_csv(restaurants.geocoded, '../output/restaurants_unique_geocoded.csv')
etl.input.data <- function(do.preliminary.data = FALSE,
relevant.columns,
data.source.csv){
if(preliminary.data.job){
## ---- Extract Data
restaurant.data <- read_csv(data.source.csv) #load your data set here
## ---- Transform Data
names(restaurant.data) <- make.names(names(restaurant.data))
restaurant.data$full.address <- paste(tolower(restaurant.data$STREET),
restaurant.data$BUILDING,", NY, US")
## ---- Load Data
restaurant.data.uniques <- restaurant.data[!duplicated(restaurant.data[,relevant.columns]),]
restaurant.data.uniques <- restaurant.data.uniques[,relevant.columns]
restaurant.data.uniques <- na.omit(restaurant.data.uniques)
## ---- Write CSV file with the table we need to geo locate
write_csv(restaurant.data.uniques, '../output/restaurant_uniques_source.csv')
} else {
restaurant.data.uniques <- read_csv('../output/restaurant_uniques_source.csv')
}
return(restaurant.data.uniques)
}
library(dplyr)
library(ggmap)
library(ggplot2)
library(DT)
library(readr)
library(data.table)
library(qmap)
source('restaurant_data_functions.R') # functions
source('restaurant_data_functions.R') # functions
library(dplyr)
library(ggmap)
library(ggplot2)
library(DT)
library(readr)
library(data.table)
library(qmap)
source('restaurant_data_functions.R') # functions
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Get Data ----
preliminary.data.job <- FALSE
get.geocode.data.flag <- FALSE
relevant.columns <- c('CAMIS','DBA','CUISINE.DESCRIPTION','full.address')
source.data.file <- "../data/DOHMH_New_York_City_Restaurant_Inspection_Results.csv"
output.route <- '../output/output_geodata/'
restaurant.data.uniques <- etl.input.data(FALSE, relevant.columns, source.data.file, output.route)
# Obtain geocode data ----
# We have to run this several times, because google only allows 2500 calls per day.
if(get.geocode.data.flag){
# KEY PARAMETERS
source.of.data <- "google"
google.daily.max <- 2500
fileNumber <- 6
# Calculations of range to explore, from a to b
a <- (fileNumber-1)*google.daily.max + 1
b <- a + google.daily.max - 1
# You can change a and b manually in the next two rows
#a <- 10001
#b <- 10100
range.to.get.data <- a:b
# Function Call
geocode.data <- get.geocode.data(restaurant.data.uniques,
range.to.get.data,
fileNumber,
source.of.data,
output.route)
}
# Merge all files
restaurants.geocoded <- multimerge(output.route)
cafe_marker <- function(dataset){
dataset <- dataset %>%
mutate(cafe=ifelse(grepl("CAFE",DBA),1,
ifelse(grepl("Cafe",DBA),1,
ifelse(grepl("cafe",DBA),1,0))))
return(dataset)
}
restaurants.geocoded <- cafe_marker(restaurants.geocoded)
write_csv(restaurants.geocoded, '../output/restaurants_unique_geocoded.csv')
library(dplyr)
library(ggmap)
library(ggplot2)
library(DT)
library(readr)
library(data.table)
library(qmap)
source('restaurant_data_functions.R') # functions
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Get Data ----
preliminary.data.job <- FALSE
get.geocode.data.flag <- FALSE
relevant.columns <- c('CAMIS','DBA','CUISINE.DESCRIPTION','full.address')
source.data.file <- "../data/DOHMH_New_York_City_Restaurant_Inspection_Results.csv"
output.route <- '../output/output_geodata/'
restaurant.data.uniques <- etl.input.data(FALSE, relevant.columns, source.data.file, output.route)
# Obtain geocode data ----
# We have to run this several times, because google only allows 2500 calls per day.
if(get.geocode.data.flag){
# KEY PARAMETERS
source.of.data <- "google"
google.daily.max <- 2500
fileNumber <- 6
# Calculations of range to explore, from a to b
a <- (fileNumber-1)*google.daily.max + 1
b <- a + google.daily.max - 1
# You can change a and b manually in the next two rows
#a <- 10001
#b <- 10100
range.to.get.data <- a:b
# Function Call
geocode.data <- get.geocode.data(restaurant.data.uniques,
range.to.get.data,
fileNumber,
source.of.data,
output.route)
}
# Merge all files
restaurants.geocoded <- multimerge(output.route)
restaurants.geocoded <- cafe_marker(restaurants.geocoded)
write_csv(restaurants.geocoded, '../output/restaurants_unique_geocoded.csv')
runApp('C:/Users/jgaci/Dropbox/2016_Fall/Applied_Data_Science/Project02/Fall2016-Proj2-grp12/app')
runApp('C:/Users/jgaci/Dropbox/2016_Fall/Applied_Data_Science/Project02/Fall2016-Proj2-grp12/app')
restaurant.data <- read.csv("../output/restaurants_unique_geocoded.csv")
runApp('C:/Users/jgaci/Dropbox/2016_Fall/Applied_Data_Science/Project02/Fall2016-Proj2-grp12/app')
runApp('C:/Users/jgaci/Dropbox/2016_Fall/Applied_Data_Science/Project02/Fall2016-Proj2-grp12/app')
runApp('C:/Users/jgaci/Dropbox/2016_Fall/Applied_Data_Science/Project02/Fall2016-Proj2-grp12/app')
restaurant.data <- read.csv("../output/restaurants_unique_geocoded.csv")
restaurant.data <- restaurant.data[restaurant.data$cafe == 1,]
restaurant.data <- restaurant.data[1:100,]
View(restaurant.data)
restaurant.data <- read.csv("../output/restaurants_unique_geocoded.csv")
restaurant.data <- restaurant.data[restaurant.data$cafe == 1,]
View(restaurant.data)
restaurant.data <- read.csv("../output/restaurants_unique_geocoded.csv")
restaurant.data <- read.csv("../output/restaurants_unique_geocoded.csv")
wifi.data <- read.csv("../data/NYC_Wi-Fi_Hotspot_Locations_Map.csv")
restaurant.data <- read.csv("../output/restaurants_unique_geocoded.csv")
restaurant.data <- read.csv("../output/restaurants_unique_geocoded.csv")
View(restaurant.data)
restaurant.data <- read.csv("../output/restaurants_unique_geocoded.csv")
restaurant.data <- read_csv("../output/restaurants_unique_geocoded.csv")
wifi.data <- read_csv("../data/NYC_Wi-Fi_Hotspot_Locations_Map.csv")
restaurant.data <- restaurant.data[restaurant.data$cafe == 1,]
restaurant.data <- restaurant.data[1:100,]
runApp('C:/Users/jgaci/Dropbox/2016_Fall/Applied_Data_Science/Project02/Fall2016-Proj2-grp12/app')
runApp('C:/Users/jgaci/Dropbox/2016_Fall/Applied_Data_Science/Project02/Fall2016-Proj2-grp12/app')
